upstream user-service {
    zone upstream-userApp 64k;
    least_conn;
    server user-service:8081 max_fails=3 fail_timeout=60 weight=1;
}

upstream order-service {
    zone upstream-userApp 64k;
    least_conn;
    server order-service:8082 max_fails=3 fail_timeout=60 weight=1;
}

upstream restaurant-service {
    zone upstream-userApp 64k;
    least_conn;
    server restaurant-service:8083 max_fails=3 fail_timeout=60 weight=1;
}

upstream comment-service {
    zone upstream-userApp 64k;
    least_conn;
    server comment-service:8084 max_fails=3 fail_timeout=60 weight=1;
}

server {
    access_log /var/log/nginx/api_access.log main;
    listen 8080 default_server;

    location /api/user {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Content-Length' '0';
            add_header 'Content-Type' 'text/plain';
            return 204;  # Respond to preflight with no content
        }

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
        add_header 'Access-Control-Allow-Credentials' 'true';

        proxy_pass http://user-service/;
        rewrite ^/api/user/(.*)$ /$1 break;
    }

    location /api/order {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Content-Length' '0';
            add_header 'Content-Type' 'text/plain';
            return 204;  # Respond to preflight with no content
        }

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
        add_header 'Access-Control-Allow-Credentials' 'true';

        proxy_pass http://order-service/;
        rewrite ^/api/order/(.*)$ /$1 break;
    }

    location /api/restaurant {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Content-Length' '0';
            add_header 'Content-Type' 'text/plain';
            return 204;  # Respond to preflight with no content
        }

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
        add_header 'Access-Control-Allow-Credentials' 'true';

        proxy_pass http://restaurant-service/;
        rewrite ^/api/restaurant/(.*)$ /$1 break;
    }

    location /api/comment {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Content-Length' '0';
            add_header 'Content-Type' 'text/plain';
            return 204;  # Respond to preflight with no content
        }

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
        add_header 'Access-Control-Allow-Credentials' 'true';

        proxy_pass http://comment-service/;
        rewrite ^/api/comment/(.*)$ /$1 break;
    }
}
